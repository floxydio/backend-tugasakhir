generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model absen {
  id         Int     @id @default(autoincrement())
  user_id    Int
  keterangan String? @db.VarChar(255)
  reason     String? @db.VarChar(255)
  day        Int
  month      Int
  year       Int
  time       String  @db.VarChar(255)
  users      users   @relation(fields: [user_id], references: [user_id], onUpdate: Restrict, map: "absen_ibfk_1")

  @@index([user_id], map: "user_id")
}

model guru {
  id          Int    @id @default(autoincrement())
  nama        String @db.VarChar(255)
  mengajar    String @db.VarChar(255)
  status_guru Int
  rating      Int
}

model kelas {
  kelas_id                        Int         @id @default(autoincrement())
  guru_user_id                    Int
  nomor_kelas                     String      @db.VarChar(255)
  jumlah_orang                    Int
  users_kelas_guru_user_idTousers guru_users  @relation("kelas_guru_user_idTousers", fields: [guru_user_id], references: [guru_id], onDelete: NoAction, onUpdate: NoAction, map: "kelas_ibfk_1")
  pelajaran                       pelajaran[]
  ujian                           ujian[]
  users_users_kelas_idTokelas     users[]     @relation("users_kelas_idTokelas")

  @@index([guru_user_id], map: "guru_user_id")
}

model nilai {
  id           Int @id @default(autoincrement())
  uts          Int
  uas          Int
  kelas_id     Int
  user_id      Int
  semester     Int
  pelajaran_id Int
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pelajaran {
  pelajaran_id Int        @id @default(autoincrement())
  nama         String     @db.VarChar(255)
  guru_id      Int
  kelas_id     Int
  jadwal       Int
  jam          String     @db.VarChar(255)
  createdAt    DateTime   @db.Date
  updatedAt    DateTime?  @db.Date
  users        guru_users @relation(fields: [guru_id], references: [guru_id], onUpdate: Restrict, map: "pelajaran_ibfk_1")
  kelas        kelas      @relation(fields: [kelas_id], references: [kelas_id], onUpdate: Restrict, map: "pelajaran_ibfk_2")
  ujian        ujian[]

  @@index([kelas_id], map: "kelas_id")
  @@index([guru_id], map: "pelajaran_ibfk_1")
}

model users {
  user_id                     Int            @id @default(autoincrement())
  nama                        String         @db.VarChar(255)
  username                    String         @unique(map: "username") @db.VarChar(255)
  password                    String         @db.VarChar(255)
  status_user                 Int            @default(0)
  user_agent                  String?        @db.VarChar(255)
  profile_pic                 String         @default("default.jpg") @db.VarChar(255)
  notelp                      Int            @default(0)
  kelas_id                    Int
  absen                       absen[]
  jawaban_user                jawaban_user[]
  log_ujian                   log_ujian[]
  kelas_users_kelas_idTokelas kelas          @relation("users_kelas_idTokelas", fields: [kelas_id], references: [kelas_id], onUpdate: Restrict, map: "users_ibfk_1")

  @@index([kelas_id], map: "kelas_id")
}

model todo {
  id    Int    @id @default(autoincrement())
  title String @db.VarChar(255)
}

model ujian {
  ujian_id     Int            @id @default(autoincrement())
  nama_ujian   String         @db.VarChar(255)
  tanggal      DateTime       @db.Date
  pelajaran_id Int
  durasi       Int
  semester     Int?
  soal         String         @db.LongText
  essay        String         @db.LongText
  jam_mulai    String         @db.VarChar(255)
  keterangan   String         @db.VarChar(255)
  status_ujian Int            @default(0)
  total_soal   Int
  kelas_id     Int
  createdAt    DateTime       @db.Date
  updatedAt    DateTime?      @db.Date
  jawaban_user jawaban_user[]
  pelajaran    pelajaran      @relation(fields: [pelajaran_id], references: [pelajaran_id], onUpdate: Restrict, map: "ujian_ibfk_1")
  kelas        kelas          @relation(fields: [kelas_id], references: [kelas_id], onUpdate: Restrict, map: "ujian_ibfk_2")

  @@index([pelajaran_id], map: "mata_pelajaran")
  @@index([kelas_id], map: "kelas_id")
}

model absen_guru {
  id               Int     @id @default(autoincrement())
  user_id          Int
  day              Int
  month            Int
  year             Int
  time             String  @db.VarChar(255)
  keterangan       String  @db.VarChar(255)
  sakit_keterangan String? @db.VarChar(255)
}

model jawaban_user {
  jawaban_user_id Int      @id @default(autoincrement())
  user_id         Int
  jawaban_pg      String?  @db.Text
  jawaban_essay   String?  @db.Text
  ujian_id        Int
  total_benar     Int
  total_salah     Int
  semester        Int?
  log_history     String?  @db.Text
  submittedAt     DateTime @db.DateTime(0)
  users           users    @relation(fields: [user_id], references: [user_id], onUpdate: Restrict, map: "jawaban_user_ibfk_1")
  ujian           ujian    @relation(fields: [ujian_id], references: [ujian_id], onUpdate: Restrict, map: "jawaban_user_ibfk_2")

  @@index([user_id], map: "user_id")
  @@index([ujian_id], map: "ujian_id")
}

model log_ujian {
  id        Int      @id @default(autoincrement())
  log       String   @db.VarChar(255)
  user_id   Int
  createdAt DateTime @db.Date
  users     users    @relation(fields: [user_id], references: [user_id], onUpdate: Restrict, map: "log_ujian_ibfk_1")

  @@index([user_id], map: "user_id")
}

model role_user {
  id          Int    @id @default(autoincrement())
  role_id     Int
  menu_name   String @db.VarChar(255)
  status_menu Int    @default(0)
  url_path    String @db.VarChar(255)
}

model guru_users {
  guru_id                         Int         @id @default(autoincrement())
  nama                            String      @db.VarChar(255)
  username                        String      @db.VarChar(255)
  password                        String      @db.VarChar(255)
  status_user                     Int         @default(0)
  user_agent                      String?     @db.VarChar(255)
  profile_pic                     String      @default("default.jpg") @db.VarChar(255)
  notelp                          Int         @default(0)
  kelas_kelas_guru_user_idTousers kelas[]     @relation("kelas_guru_user_idTousers")
  pelajaran                       pelajaran[]
}
