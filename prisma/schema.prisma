generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model absen {
  id           Int     @id @default(autoincrement())
  user_id      Int
  guru_id      Int
  pelajaran_id Int
  kelas_id     Int
  keterangan   String? @db.VarChar(255)
  reason       String? @db.VarChar(255)
  day          Int
  month        Int
  year         Int
  time         String  @db.VarChar(255)
}

model guru {
  id          Int    @id @default(autoincrement())
  nama        String @db.VarChar(255)
  mengajar    String @db.VarChar(255)
  status_guru Int
  rating      Int
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model guru_users {
  id          Int
  nama        String  @db.VarChar(255)
  username    String  @db.VarChar(255)
  password    String  @db.VarChar(255)
  status_user Int     @default(0)
  status_role Int     @default(0)
  user_agent  String? @db.VarChar(255)
  profile_pic String  @default("default.jpg") @db.VarChar(255)
  notelp      Int     @default(0)
  kelas_id    Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model jumlah {
  id          Int
  nomor_kelas String @db.VarChar(255)
  wali_kelas  String @db.VarChar(255)
  jam_kelas   String @db.VarChar(255)

  @@ignore
}

model kelas {
  id           Int         @id @default(autoincrement())
  wali         String      @db.VarChar(255)
  nomor        Int
  jumlah_orang Int
  pelajaran    pelajaran[]
  ujian        ujian[]
}

model nilai {
  id           Int @id @default(autoincrement())
  uts          Int
  uas          Int
  kelas_id     Int
  user_id      Int
  semester     Int
  pelajaran_id Int
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pelajaran {
  pelajaran_id Int       @id @default(autoincrement())
  nama         String    @db.VarChar(255)
  user_id      Int
  kelas_id     Int
  jadwal       Int
  jam          String    @db.VarChar(255)
  createdAt    DateTime  @db.Date
  updatedAt    DateTime? @db.Date
  users        users     @relation(fields: [user_id], references: [user_id], onUpdate: Restrict, map: "pelajaran_ibfk_1")
  kelas        kelas     @relation(fields: [kelas_id], references: [id], onUpdate: Restrict, map: "pelajaran_ibfk_2")
  ujian        ujian[]

  @@index([kelas_id], map: "kelas_id")
  @@index([user_id], map: "user_id")
}

model users {
  user_id      Int            @id @default(autoincrement())
  nama         String         @db.VarChar(255)
  username     String         @unique(map: "username") @db.VarChar(255)
  password     String         @db.VarChar(255)
  status_user  Int            @default(0)
  status_role  Int            @default(0)
  user_agent   String?        @db.VarChar(255)
  profile_pic  String         @default("default.jpg") @db.VarChar(255)
  notelp       Int            @default(0)
  kelas_id     Int?
  jawaban_user jawaban_user[]
  log_ujian    log_ujian[]
  pelajaran    pelajaran[]
}

model todo {
  id    Int    @id @default(autoincrement())
  title String @db.VarChar(255)
}

model ujian {
  id             Int       @id @default(autoincrement())
  nama_ujian     String    @db.VarChar(255)
  tanggal        DateTime  @db.Date
  mata_pelajaran Int
  durasi         Int
  soal           String    @db.LongText
  essay          String    @db.LongText
  jam_mulai      String    @db.VarChar(255)
  keterangan     String    @db.VarChar(255)
  status_ujian   Int       @default(0)
  total_soal     Int
  kelas_id       Int
  createdAt      DateTime  @db.Date
  updatedAt      DateTime? @db.Date
  pelajaran      pelajaran @relation(fields: [mata_pelajaran], references: [pelajaran_id], onUpdate: Restrict, map: "ujian_ibfk_1")
  kelas          kelas     @relation(fields: [kelas_id], references: [id], onUpdate: Restrict, map: "ujian_ibfk_2")

  @@index([mata_pelajaran], map: "mata_pelajaran")
  @@index([kelas_id], map: "kelas_id")
}

model absen_guru {
  id               Int     @id @default(autoincrement())
  user_id          Int
  day              Int
  month            Int
  year             Int
  time             String  @db.VarChar(255)
  keterangan       String  @db.VarChar(255)
  sakit_keterangan String? @db.VarChar(255)
}

model jawaban_user {
  jawaban_user_id Int      @id @default(autoincrement())
  user_id         Int
  jawaban_pg      String?  @db.Text
  jawaban_essay   String?  @db.Text
  ujian_id        Int
  total_benar     Int
  total_salah     Int
  log_history     String?  @db.Text
  submittedAt     DateTime @db.DateTime(0)
  users           users    @relation(fields: [user_id], references: [user_id], onUpdate: Restrict, map: "jawaban_user_ibfk_1")

  @@index([user_id], map: "user_id")
}

model log_ujian {
  id           Int      @id @default(autoincrement())
  ujian_data   String   @db.VarChar(255)
  soal_jawaban String   @db.Text
  user_id      Int
  createdAt    DateTime @db.Date
  users        users    @relation(fields: [user_id], references: [user_id], onUpdate: Restrict, map: "log_ujian_ibfk_1")

  @@index([user_id], map: "user_id")
}

model role_user {
  id          Int    @id @default(autoincrement())
  role_id     Int
  menu_name   String @db.VarChar(255)
  status_menu Int    @default(0)
  url_path    String @db.VarChar(255)
}
